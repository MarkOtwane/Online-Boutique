generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// database__name = boutique

model admin {
  id         Int      @id @default(autoincrement())
  first_name String
  last_name  String
  email      String   @unique
  password   String
  createdAt  DateTime @default(now())
  uppdatedAt DateTime @updatedAt()
  role       Role[]
}

model customer {
  id         Int      @id @default(autoincrement())
  first_name String
  last_name  String
  email      String   @unique
  password   String
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()
   deletedAt DateTime?
  role       Role[]
  carts      cart[]

  Order Order[]
}

model Product {
  id            Int         @id @default(autoincrement())
  name          String
  descripton    String      @map("description")
  price         Float
  image         String
  stripePriceId String
  isFeatured    Boolean     @default(false)
  orderItems    OrderItem[]
  carts         cart[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id         Int         @id @default(autoincrement())
  customerId Int
  customer   customer    @relation(fields: [customerId], references: [id])
  orderItems OrderItem[]
  totalPrice Float
  isPaid     Boolean     @default(false)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model cart {
  id        Int        @id @default(autoincrement())
  products  Product[]
  customers customer[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum Role {
  ADMIN
  CUSTOMER
  IS_MAIN_ADMIN
}
